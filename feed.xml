<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://monoslab.github.io/</id><title>MonosLab</title><subtitle>Make Over Number One</subtitle> <updated>2025-07-17T10:04:59+09:00</updated> <author> <name>MonosLab</name> <uri>https://monoslab.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://monoslab.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://monoslab.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 MonosLab </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[ ComfyUI ] CuiBox 소개</title><link href="https://monoslab.github.io/posts/comfyui_cuibox/" rel="alternate" type="text/html" title="[ ComfyUI ] CuiBox 소개" /><published>2024-12-05T08:00:00+09:00</published> <updated>2024-12-05T13:35:15+09:00</updated> <id>https://monoslab.github.io/posts/comfyui_cuibox/</id> <content src="https://monoslab.github.io/posts/comfyui_cuibox/" /> <author> <name>Kwangsoo Seo</name> </author> <category term="A.I." /> <category term="ComfyUI" /> <summary> Contents CuiBox 설치 방법 설정 CuiBox.json 트레이 메뉴 마무리 CuiBox CuiBox는 윈도우(Windows) 환경 하에서 ComfyUI를 좀 더 편리하게 사용하기 위해 만들고 있는 프로그램입니다. 최근에 ComfyUI에서 일렉트론을 이용한 Desktop App을 출시하고 있는 것으로 알고 있습니다. 하지만 방향이 약간 다른 관계로 CuiBox 프로젝트는 계속 진행하려고 합니다. 그럼 CuiBox에 대해 간단하게 살펴 보겠습니다. 설치 방법 https://github.com/comfyanonymous/ComfyUI/releases에서 최근 버전의 ComfyUI_windows_portable_nvidi... </summary> </entry> <entry><title>[ ComfyUI ] 프롬프트</title><link href="https://monoslab.github.io/posts/comfyui_prompt/" rel="alternate" type="text/html" title="[ ComfyUI ] 프롬프트" /><published>2024-08-25T08:00:00+09:00</published> <updated>2024-09-25T17:56:03+09:00</updated> <id>https://monoslab.github.io/posts/comfyui_prompt/</id> <content src="https://monoslab.github.io/posts/comfyui_prompt/" /> <author> <name>Kwangsoo Seo</name> </author> <category term="A.I." /> <category term="ComfyUI" /> <summary> Contents 프롬프트 기본 작성법 키워드 괄호와 대괄호 중괄호 직접 가중치 부여 AND 연산 프롬프트 처리 및 토큰의 제한 효과적인 프롬프트 작성하기 결론 프롬프트 프롬프트는 AI 시스템이 수행해야 할 창의적인 작업이나, 생성해야 할 창의적인 콘텐츠의 방향을 결정하기 위해 전달하는 입력(명령) 또는 지시문을 말합니다. 프롬프트는 작성 방법에 따라 생성되는 콘텐츠의 스타일이나 품질, 내용 등이 크게 달라 질 수가 있습니다. 아래는 프롬프트가 통상적으로 가지는 중요한 역활을 나열한 것입니다. 1. 작업의 목적과 범위 정의 2. 출력 형상과 스타일 지정 3. AI의 행동 및 응답 방... </summary> </entry> <entry><title>[ RUST ] 스마트 포인터 (smart pointer)</title><link href="https://monoslab.github.io/posts/rust_smartpoint/" rel="alternate" type="text/html" title="[ RUST ] 스마트 포인터 (smart pointer)" /><published>2024-08-09T08:00:00+09:00</published> <updated>2024-08-09T08:00:00+09:00</updated> <id>https://monoslab.github.io/posts/rust_smartpoint/</id> <content src="https://monoslab.github.io/posts/rust_smartpoint/" /> <author> <name>Kwangsoo Seo</name> </author> <category term="프로그래밍" /> <category term="RUST" /> <summary> Contents 스마트 포인터 Box&amp;lt;T&amp;gt; Rc&amp;lt;T&amp;gt; Arc&amp;lt;T&amp;gt; Cell&amp;lt;T&amp;gt; 과 RefCell&amp;lt;T&amp;gt; 나만의 스마트 포인터 스마트 포인터 스마트 포인터는 메모리의 주소 값을 가지는 변수, 즉 포인터에 추가적으로 데이터의 소유와 메타 데이터의 기능도 가지고 있는 데이터 구조입니다. 스마트 포인터는 구조체(Struct) 타입으로 정의 하며, 포인터가 가르키는 값을 참조하기 위한 Deref와 참조한 값의 소유권을 잃을 때 호출될 Drop trait을 구현하여야 합니다. 러스트의 대표적인 스마트 포인터로는 Box, Rc, Arc, Cell 등이 있으며, 아래와 같은 ... </summary> </entry> <entry><title>[ RUST ] 프로그램 시작시 콘솔창 숨기기</title><link href="https://monoslab.github.io/posts/rust_hide_console/" rel="alternate" type="text/html" title="[ RUST ] 프로그램 시작시 콘솔창 숨기기" /><published>2024-08-02T08:00:00+09:00</published> <updated>2024-08-02T08:00:00+09:00</updated> <id>https://monoslab.github.io/posts/rust_hide_console/</id> <content src="https://monoslab.github.io/posts/rust_hide_console/" /> <author> <name>Kwangsoo Seo</name> </author> <category term="프로그래밍" /> <category term="RUST" /> <summary> Contents 프로그램 시작시 콘솔창 숨기기 프로그램 시작시 콘솔창 숨기기 프로그램 실행시 콘솔창이 보이지 않게 하기 위한 방법에 대해 설명합니다. 먼저 Cargo.toml의 dependencies에 winapi 크레잇을 추가합니다. [dependencies] winapi = {version = "0.3", features = ["wincon", "winuser"]} 다음으로 작업할 것은 콘솔창이 뜰때 핸들을 얻어와서 숨기는 작업을 해주어야 합니다. 아래의 hide_console_window() 함수는 핸들을 얻어와 윈도우를 숨기는 작업에 관한 내용입니다. fn hide_console_window() { use std::ptr; use winapi::um::w... </summary> </entry> <entry><title>[ RUST ] 개발시 유용한 도구들</title><link href="https://monoslab.github.io/posts/rust_tools/" rel="alternate" type="text/html" title="[ RUST ] 개발시 유용한 도구들" /><published>2024-07-18T08:00:00+09:00</published> <updated>2024-07-18T08:00:00+09:00</updated> <id>https://monoslab.github.io/posts/rust_tools/</id> <content src="https://monoslab.github.io/posts/rust_tools/" /> <author> <name>Kwangsoo Seo</name> </author> <category term="프로그래밍" /> <category term="RUST" /> <summary> Contents Visual Code Visual Code의 확장 프로그램 rust-analyzer CodeLLDB Dependi Rust Syntax Even Better TOM Rust Mod Generator Project Manager PowerShell Tauri Visual Code Rust 개발시 많이 사용하고 있는 도구입니다. Visual Code의 확장 프로그램 rust-analyzer 코드를 분석, 자동 완성 등의 기능을 제공하고 문제가 발생할 수 있는 부분을 사전에 차단하기 위한 해법을 제공하여 코드의 품질을 향상시킵니다. CodeLLDB l... </summary> </entry> </feed>
